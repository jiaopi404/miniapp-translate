"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJs = require('crypto-js');
var Util = require("../../utils/util");
var http_1 = require("../../utils/http");
Page({
    data: {
        languageFlag: false,
        formData: {
            content: '18629287141'
        },
        translateData: {}
    },
    formInputChange: function (event) {
        this.setData({
            formData: {
                content: event.detail.value
            }
        });
    },
    handleSwitchLanguage: function () {
        this.setData({
            languageFlag: !this.data.languageFlag
        });
    },
    bindTranslate: function () {
        console.log('input value: ', this.data.formData.content);
        wx.showLoading({ title: '加载中' });
        this.queryToYouDao(this.data.formData.content);
    },
    bindPlayPhonetic: function (event) {
        var speechUrl = event.currentTarget.dataset.speech;
        console.log('speechUrl is: ', speechUrl);
        var innerAudioContext = wx.createInnerAudioContext();
        innerAudioContext.autoplay = true;
        innerAudioContext.src = speechUrl;
        innerAudioContext.onPlay(function () {
            console.log('开始播放');
        });
        innerAudioContext.onError(function (res) {
            console.log(res.errMsg);
            console.log(res.errCode);
        });
    },
    queryToYouDao: function (query) {
        var _this = this;
        var appKey = '7dd76978737827f8';
        var key = 'LaAhd9Me9A6LFKuuOmidRjaDbTUkYvpX';
        var salt = Util.getUUid();
        var curtime = Math.round(+new Date() / 1000) + '';
        var from = this.data.languageFlag ? 'en' : 'zh-CHS';
        var to = this.data.languageFlag ? 'zh-CHS' : 'en';
        var str1 = appKey + Util.truncate(query) + salt + curtime + key;
        var sign = CryptoJs.SHA256(str1).toString(CryptoJs.enc.Hex);
        http_1.default.request({
            url: 'https://openapi.youdao.com/api',
            method: 'POST',
            data: {
                q: query,
                appKey: appKey,
                salt: salt,
                from: from,
                to: to,
                sign: sign,
                signType: 'v3',
                curtime: curtime,
                strict: 'true'
            }
        }).then(function (res) {
            _this.setData({
                translateData: res
            });
            wx.hideLoading();
        }).catch(function (err) {
            console.log('err is: ', err);
            wx.hideLoading();
        });
    },
    onLoad: function () {
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHJhbnNsYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3RDLHVDQUF5QztBQUN6Qyx5Q0FBbUM7QUFHbkMsSUFBSSxDQUFDO0lBS0gsSUFBSSxFQUFFO1FBQ0osWUFBWSxFQUFFLEtBQUs7UUFDbkIsUUFBUSxFQUFFO1lBQ1IsT0FBTyxFQUFFLGFBQWE7U0FDdkI7UUFDRCxhQUFhLEVBQUUsRUFBRTtLQUNsQjtJQU1ELGVBQWUsWUFBRSxLQUFzQztRQUNyRCxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsUUFBUSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUs7YUFDNUI7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBS0Qsb0JBQW9CO1FBQ2xCLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDWCxZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVk7U0FDdEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN6RCxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUE7UUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUNoRCxDQUFDO0lBS0QsZ0JBQWdCLFlBQUUsS0FBVTtRQUNsQixJQUFBLDhDQUFpQixDQUFnQztRQUN6RCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLFNBQVMsQ0FBQyxDQUFBO1FBQ3hDLElBQU0saUJBQWlCLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixFQUFFLENBQUE7UUFDdEQsaUJBQWlCLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQTtRQUNqQyxpQkFBaUIsQ0FBQyxHQUFHLEdBQUcsU0FBUyxDQUFBO1FBQ2pDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQztZQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3JCLENBQUMsQ0FBQyxDQUFBO1FBQ0YsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRztZQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUMxQixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFNRCxhQUFhLFlBQUUsS0FBWTtRQUEzQixpQkFpQ0M7UUFoQ0MsSUFBTSxNQUFNLEdBQUcsa0JBQWtCLENBQUM7UUFDbEMsSUFBTSxHQUFHLEdBQUcsa0NBQWtDLENBQUM7UUFDL0MsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzVCLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNwRCxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7UUFDdEQsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ3BELElBQU0sSUFBSSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksR0FBRyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ2xFLElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUQsY0FBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLEdBQUcsRUFBRSxnQ0FBZ0M7WUFDckMsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUU7Z0JBQ0osQ0FBQyxFQUFFLEtBQUs7Z0JBQ1IsTUFBTSxRQUFBO2dCQUNOLElBQUksTUFBQTtnQkFDSixJQUFJLE1BQUE7Z0JBQ0osRUFBRSxJQUFBO2dCQUNGLElBQUksTUFBQTtnQkFDSixRQUFRLEVBQUUsSUFBSTtnQkFDZCxPQUFPLFNBQUE7Z0JBQ1AsTUFBTSxFQUFFLE1BQU07YUFDZjtTQUNGLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxHQUFjO1lBQ3JCLEtBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1gsYUFBYSxFQUFFLEdBQUc7YUFDbkIsQ0FBQyxDQUFBO1lBQ0YsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFBO1FBQ2xCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFBLEdBQUc7WUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUMsQ0FBQTtZQUM1QixFQUFFLENBQUMsV0FBVyxFQUFFLENBQUE7UUFDbEIsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBTUQsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUtELE9BQU8sRUFBRTtJQUVULENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUtELFFBQVEsRUFBRTtJQUVWLENBQUM7SUFLRCxpQkFBaUIsRUFBRTtJQUVuQixDQUFDO0lBS0QsYUFBYSxFQUFFO0lBRWYsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1pbmlwcm9ncmFtL3BhZ2VzL3RyYW5zbGF0ZS90cmFuc2xhdGUuanNcbi8vIGltcG9ydCB7IHJlcXVlc3QgfSBmcm9tICcuLi8uLi91dGlscy9odHRwJ1xuY29uc3QgQ3J5cHRvSnMgPSByZXF1aXJlKCdjcnlwdG8tanMnKTtcbmltcG9ydCAqIGFzIFV0aWwgZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgSHR0cCBmcm9tICcuLi8uLi91dGlscy9odHRwJ1xuaW1wb3J0IHsgWW91RGFvUmVzcCB9IGZyb20gJy4uLy4uL3R5cGVzL3lvdWRhbydcblxuUGFnZSh7XG5cbiAgLyoqXG4gICAqIOmhtemdoueahOWIneWni+aVsOaNrlxuICAgKi9cbiAgZGF0YToge1xuICAgIGxhbmd1YWdlRmxhZzogZmFsc2UsXG4gICAgZm9ybURhdGE6IHtcbiAgICAgIGNvbnRlbnQ6ICcxODYyOTI4NzE0MSdcbiAgICB9LFxuICAgIHRyYW5zbGF0ZURhdGE6IHt9XG4gIH0sXG5cbiAgLyoqXG4gICAqIOihqOWNlei+k+WFpSBjaGFuZ2UgaGFuZGxlclxuICAgKiBAcGFyYW0gZXZlbnRcbiAgICovXG4gIGZvcm1JbnB1dENoYW5nZSAoZXZlbnQ6IHsgZGV0YWlsOiB7IHZhbHVlOiBzdHJpbmc7IH07IH0pIHtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgZm9ybURhdGE6IHtcbiAgICAgICAgY29udGVudDogZXZlbnQuZGV0YWlsLnZhbHVlXG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIOeCueWHu+WIh+aNouivreiogFxuICAgKi9cbiAgaGFuZGxlU3dpdGNoTGFuZ3VhZ2UgKCkge1xuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBsYW5ndWFnZUZsYWc6ICF0aGlzLmRhdGEubGFuZ3VhZ2VGbGFnXG4gICAgfSk7XG4gIH0sXG5cbiAgYmluZFRyYW5zbGF0ZSAoKSB7XG4gICAgY29uc29sZS5sb2coJ2lucHV0IHZhbHVlOiAnLCB0aGlzLmRhdGEuZm9ybURhdGEuY29udGVudCk7XG4gICAgd3guc2hvd0xvYWRpbmcoeyB0aXRsZTogJ+WKoOi9veS4rScgfSlcbiAgICB0aGlzLnF1ZXJ5VG9Zb3VEYW8odGhpcy5kYXRhLmZvcm1EYXRhLmNvbnRlbnQpXG4gIH0sXG4gIC8qKlxuICAgKiDmkq3mlL7lj5Hpn7NcbiAgICogQHBhcmFtIGV2ZW50XG4gICAqL1xuICBiaW5kUGxheVBob25ldGljIChldmVudDogYW55KSB7XG4gICAgY29uc3QgeyBzcGVlY2g6IHNwZWVjaFVybCB9ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0XG4gICAgY29uc29sZS5sb2coJ3NwZWVjaFVybCBpczogJywgc3BlZWNoVXJsKVxuICAgIGNvbnN0IGlubmVyQXVkaW9Db250ZXh0ID0gd3guY3JlYXRlSW5uZXJBdWRpb0NvbnRleHQoKVxuICAgIGlubmVyQXVkaW9Db250ZXh0LmF1dG9wbGF5ID0gdHJ1ZVxuICAgIGlubmVyQXVkaW9Db250ZXh0LnNyYyA9IHNwZWVjaFVybFxuICAgIGlubmVyQXVkaW9Db250ZXh0Lm9uUGxheSgoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn5byA5aeL5pKt5pS+JylcbiAgICB9KVxuICAgIGlubmVyQXVkaW9Db250ZXh0Lm9uRXJyb3IoKHJlcykgPT4ge1xuICAgICAgY29uc29sZS5sb2cocmVzLmVyck1zZylcbiAgICAgIGNvbnNvbGUubG9nKHJlcy5lcnJDb2RlKVxuICAgIH0pXG4gIH0sXG5cbiAgLyoqXG4gICAqIOWQkSBvcGVuQVBJIOi/m+ihjOivt+axglxuICAgKiBAcGFyYW0gcXVlcnlcbiAgICovXG4gIHF1ZXJ5VG9Zb3VEYW8gKHF1ZXJ5OnN0cmluZykge1xuICAgIGNvbnN0IGFwcEtleSA9ICc3ZGQ3Njk3ODczNzgyN2Y4JztcbiAgICBjb25zdCBrZXkgPSAnTGFBaGQ5TWU5QTZMRkt1dU9taWRSamFEYlRVa1l2cFgnO1xuICAgIGNvbnN0IHNhbHQgPSBVdGlsLmdldFVVaWQoKTtcbiAgICBjb25zdCBjdXJ0aW1lID0gTWF0aC5yb3VuZCgrbmV3IERhdGUoKSAvIDEwMDApICsgJyc7XG4gICAgY29uc3QgZnJvbSA9IHRoaXMuZGF0YS5sYW5ndWFnZUZsYWcgPyAnZW4nIDogJ3poLUNIUyc7XG4gICAgY29uc3QgdG8gPSB0aGlzLmRhdGEubGFuZ3VhZ2VGbGFnID8gJ3poLUNIUycgOiAnZW4nO1xuICAgIGNvbnN0IHN0cjEgPSBhcHBLZXkgKyBVdGlsLnRydW5jYXRlKHF1ZXJ5KSArIHNhbHQgKyBjdXJ0aW1lICsga2V5O1xuICAgIGNvbnN0IHNpZ24gPSBDcnlwdG9Kcy5TSEEyNTYoc3RyMSkudG9TdHJpbmcoQ3J5cHRvSnMuZW5jLkhleCk7XG5cbiAgICBIdHRwLnJlcXVlc3Qoe1xuICAgICAgdXJsOiAnaHR0cHM6Ly9vcGVuYXBpLnlvdWRhby5jb20vYXBpJyxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgZGF0YToge1xuICAgICAgICBxOiBxdWVyeSxcbiAgICAgICAgYXBwS2V5LFxuICAgICAgICBzYWx0LFxuICAgICAgICBmcm9tLFxuICAgICAgICB0byxcbiAgICAgICAgc2lnbixcbiAgICAgICAgc2lnblR5cGU6ICd2MycsXG4gICAgICAgIGN1cnRpbWUsXG4gICAgICAgIHN0cmljdDogJ3RydWUnXG4gICAgICB9XG4gICAgfSkudGhlbigocmVzOllvdURhb1Jlc3ApID0+IHtcbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIHRyYW5zbGF0ZURhdGE6IHJlc1xuICAgICAgfSlcbiAgICAgIHd4LmhpZGVMb2FkaW5nKClcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ2VyciBpczogJywgZXJyKVxuICAgICAgd3guaGlkZUxvYWRpbmcoKVxuICAgIH0pXG4gIH0sXG5cblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliqDovb1cbiAgICovXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yid5qyh5riy5p+T5a6M5oiQXG4gICAqL1xuICBvblJlYWR5OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcbiAgICovXG4gIG9uU2hvdzogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i6ZqQ6JePXG4gICAqL1xuICBvbkhpZGU6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWNuOi9vVxuICAgKi9cbiAgb25VbmxvYWQ6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDpobXpnaLnm7jlhbPkuovku7blpITnkIblh73mlbAtLeebkeWQrOeUqOaIt+S4i+aLieWKqOS9nFxuICAgKi9cbiAgb25QdWxsRG93blJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDpobXpnaLkuIrmi4nop6blupXkuovku7bnmoTlpITnkIblh73mlbBcbiAgICovXG4gIG9uUmVhY2hCb3R0b206IGZ1bmN0aW9uICgpIHtcblxuICB9XG59KVxuIl19